1) экспорт в тестирующие системы
2) «Тулза нужна затем, чтобы у всех всё было одинаково.» (Дима Гозман)
3) gui/web-интерфейс для basic-пользователей
4) «Генератор на питоне вызывает на fpc делфёвые библиотеки под wine» (Миша Дворкин)
5) t create <s|shit|Shit|SHIT|OMG_SHIT>
6) «Стандарты — это хорошо, поэтому мы сделаем много стандартов!» (Виталик Гольдштейн)
7) bur import — отбуреайзить задачу
8) «А темы лекций автоматически определяются по тегам задач» (Виталик Гольдштейн)
9) У задачи будет id!

== чего не хватает в t.py ==
1) api (напримет, для web-интерфейса)
2) действие по умолчанию — проверка задачи на формат
3) разные интересные проверки: например, чтобы не затирались тесты
4) команды для создания шаблонов (особенно полезно в сложном формате задач), может более интересные штуки
5) t.py todo: «Чувак, теперь тебе нужно написать решение!»
== workflow ==
1) формат
2) консольная тулза
2-1) t todo
2-2) import
3) интерфейсы
== проблемы ==
1) строгий формат нужен для стандартизации, но отпугнёт новых пользователей
2) версии задач, их нужно сохранять
3) можно ли в контест добавлять задачу из другого репозитория

== фишки ==
1) специальный язык
2) генерация скриптов для измерения скорости программ на invoker'е
