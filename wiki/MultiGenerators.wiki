= Introduction =

Сделать так, чтобы поддерживались генераторы, делающие много тестов.

= Details =

Как определить, что сгененрированный файл --- тест:
1) Все автоматически, берем весь дифф.

2) Пользователь задает директорию, где будут тесты

3) Пользователь задает маску для файлов в диффе

4) Исключения, задается маской.

Формат задания мультигенераторов:
[sample, tests_dir = ../tests, mask = *.in, exclude = *.tmp, stdout = True]multi_gen.cpp 100500 122 45
-->
[sample, mask = ../tests/*.in, exclude = *.tmp]multi_gen.cpp 100500 122 45
gen_stdout.cpp 1234 6543



Задачи:
1) класс для определения по диффу папки с задачей, что является тестами.
    a) полностью описать логику работы и интерфейс. [0.5 - 0.8] @Олег

2) тесты для этого класса из пункта 1

3) функция, которая по всем тегам создает класс из пункта 1.

4) разделить testinfo на 3 класса + интерфейс (tests, tags, to_please_format).+ внедрение в generate_tests, import, parse_config
    a) написать FileTestInfo полностью вместе с интерфейсом и тестами [2-3] @Паша
    б) внедрить только его в import. [0.8-1] @Олег
    б) внедрить только его в generate_test. [2-4] @Миша

5) сформулировать мелкие баги, которые надо исправлять в процессе.
