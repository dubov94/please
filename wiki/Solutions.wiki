#summary Описание работы с несколькими решениями в одной задаче.

= Introduction =

В этом тексте будет описано, как хранится информация про решения в default.package, как добавить решения в please, как сделать какое-то решение главным, что такое expected_verdict и possible_verdict.

= Details =


Для начала отмечу, что пути в default.package могут быть написаны и с использованием '\', и с использованием '/', please не отличает их в конфиге.
В этом confige хранится информация про расположение и особенности решений, написанных к этой задаче.

1) main_solution

В конфиге есть такая строчка:

'main_solution = solutions\solution.cpp' (без '')

main_solution здесь - путь до главного решения. Главное решение должно обязательно проходить все тесты на OK, по нему будут генерироваться ответы на все тесты. К сожалению, наша система пока что не может адекватно поддерживать задачи, где авторское решение не проходит все тесты (например, по TL) и где дается возможность участникам придумать что-то гениальное.
Для того, чтобы добавить main_solution, не исправляя конфиг, нужно написать команду please:
'please set main solution #path' (#path - путь до задачи из корня задачи).
Главное решение так же, как и все остальные нужно добавить. Команда 'set main solution' меняется только ключ main_solution в конфиге. Как это сделать написано в следующем пункте.

2) Добавить решение

Чтобы утилита please могла использовать различные (в том числе и неправильные) решения в автоматическом режиме, их необходимо добавить. На данный момент проще всего решения править непосредственно в конфигурационном файле. default.package:


{{{
...
solution = {
    source = solutions/solution_wrong.cpp
    expected_verdicts = OK, RE, WA
    possible_verdicts = ML, TL
}
...
}}}

Вставлять подобные фрагменты можно в любое место конфигурационного файла.

Описание решения в default.package
{{{
solution = {
    sourse = solutions/sol.cpp #обязательно; путь к задаче из корня
    expected_verdicts = WA #опционально; какие вердикты программа должна получать хотя бы на одном тесте
    possible_verdicts = OK, WA, RE #опционально; какие вердикты программа может получать на тестах
    input = input.txt #опционально; входной файл, приоритетнее указанного в default.package для всей задачи
    output = stdout #опционально; выходной файл, приоритетнее указанного в default.package для всей задачи
}
}}}
Значения по умолчанию:
input, output устанавливаются в значения, указанные в default.package

expected_verdicts по умолчанию устанавливается в пустое множество

possible_verdicts по умолчанию устанавливается в OK, WA, TL, ML, RE, PE

Список возможных вердиктов:

OK
WA - wrong answer
RE - run-time error
TL - time limit
ML - memory limit
PE - presentation error

Кроме того можно добавить решение, используя команды please:
1) 'add solution #path expected: @expected_list possible: @possible_list', где #path - путь до решения из корня. @expected_list - те вердикты, которые окажутся в expected_verdicts. @possible_list - те вердикты, которые окажутся в possible_verdicts.
2) 'add solution #path with @expected_list'
Изменить поля input, output не исправляя руками конфиг пока что нельзя.

Если Вы добавили уже находящееся в конфиг файле решение, то please может повести себя непредсказуемо.

3) Удалить решение

Удалить решение какой-то командой в please нельзя. Для этого нужно руками удалить строки

{{{
...
solution = {
    source = solutions/solution_wrong.cpp
    expected_verdicts = OK, RE, WA
    possible_verdicts = ML, TL
}
...
}}}

из default.package.

4)Check_solution. Описание тестирования решений.

Please поддерживает возможности тестирования всех решений, тестирования конкретного решения и тестирования основного решения. Запускаются эти функции из корневой папки задачи. Решение может тестироваться только на всех тестах, если тесты не сгенерированы или сгенерированная версия устарела (произошли изменения генератора или tests.please), запускается генерация тестов. Аналогично если не сгенерирована последняя версия ответов к тестам, запускается генерация ответов (с помощью основного решения).

Примеры:

please check main solution - тестирование основного решения
@Главное решение должно быть описано в default.package

please check solutions - тестирование всех решений, описанных в default.package

please check solution @solution_name - тестирование решения @solution_name, где @solution_name - путь к решению из корня задачи, @solution_name описано в default.package