_Описываемая функциональность в данный момент реализована и находится в /branches/problem_in_svn/ - пока в стадии тестирования и обсуждения_

= Введение =

Задачи, создаваемые с использованием please, можно хранить в репозитории svn, как в собственном, так и в централизованном. 

= Подробности =

Please предлагает две модели хранения задач в репозитории svn: public и personal, а также позволяет не использовать svn вовсе.

Public-репозиторий предполагает хранение задач, создаваемых разными пользователями без непосредственного их участия в процессе сохранения задачи репозитории. Создание шаблона задачи и основные действия 
по ее разработке синхронизируются автоматически. Лишь для синхронизации действий, сделанных не через интерфейс please, необходимо использовать команду please [svn] sync.

Модель public-репозитория можно использовать как для хранения задач в общем репозитории code.google.com/p/please-svn/svn, так и совместно с собственным репозиторием.

Personal-репозиторий предполагает полный контроль пользователем над работой с svn. При создании задачи она должна создаваться в локальной копии репозитория - в этом случае ее копия автоматически окажется в репозитории svn. Любые добавления и изменения файлов синхронизируются командой please [svn] sync, удаление файлов производится вручную (svn delete ...; svn commit).

= Настройка работы с svn =
В файле please/globalconfig.py присутствует примерно следущий код:
{{{
svn = {     'type': 'public',
             'url': 'https://please-svn.googlecode.com/svn/problems/',
        'username': 'ivanov@gmail.com', 
        'password': 'XXXXXXX'}
}}}

_Если вы используете репозиторий code.google.com, обратите внимание, что password - это ваш пароль для доступа в репозиторий, а не пароль вашего google-аккаунта._ 

Если вы хотите использовать personal-модель репозитория, укажите
{{{
'type': 'personal'
}}}

Если вы не хотите использовать svn, оставьте url пустым:
{{{
'url' : '',
}}}


Не удаляйте переменную svn, а также ее поля, даже если вы не хотите использовать svn!


=Использование public-модели репозитория=

  # Укажите в настройках, что репозиторий является public, укажите его адрес, логин и пароль для доступа к нему.
  # Создайте задачу (please create problem SHORTNAME). В этот момент в репозитории будет создана папка, имеющая название SHORTNAME_USERNAME_TIMECODE, в которой будут хранится все файлы данной задачи.
  # Работайте с задачей, используя интерфейс please (please set main solution, please add solution...) - каждая такая команда автоматически будет обновлять вашу локальную копию, а также вносить в репозиторий все изменения.
  # После совершения действий не через интерфейс please (например, добавления файлов с ручными тестами, редактирования условия), команда please [svn] sync сделает svn up, после чего добавит все вновь появившиеся файлы и директории в svn и обновит изменившиеся файлы (будут добавлены все файлы кроме папок, указанных в списке svn_trash_dirs в файле please/svn/__init__.py, а также все файлы кроме файлов без расширения - как правило это бинарные файлы в linux - и файлов с расширениями, указанными в списке svn_trash_ext в том же .py-файле. Команда please [svn] sync должна даваться из директории задачи.
  # Если вы хотите удалить файл или выполнить другие действия с svn, вы можете напрямую воспользоваться командами svn.
  # Если вы хотите удалить задачу, выйдите из папки с задачей на уровень выше и воспользуйтесь командой please delete problem SHORTNAME. Локальная копия задачи будет удалена, а папка в репозитории - перемещена в папку .deleted Позже при необходимости вы сможете восстановить ее вручную.

= Использование personal-модели репозитория =
  # Выберите папку в локальной копии вашего svn, в которой вы хотите создать новую задачу.
  # Команда please create problem SHORTNAME создаст новую задачу в этой папке локальной копии и в соответствующей ей папке репозитория.
  # Если задача была создана только локально, вы можете импортировать ее в svn-репозиторий.
  # Работая с задачей, вы можете использовать команду please [svn] sync для добавления новых файлов и обновления старых файлов в репозитории (подробности см. выше), а также напрямую использовать команды svn (в частности, для удаления файлов и директорий).
  # Удалять задачу из svn при необходимости также придется вручную


=Что дальше=
Необходимо реализовать возможность загрузки из репозитория чужих задач, а также хранение и работу с контестами (наборами задач). Для personal-модели репозитория это делается вручную, а в public-модели можно на первых порах предусмотреть команду, сохраняющую контест как список задач, и команду, загружающую контест по его имени или номеру.

=Технические подробности для разработчиков=
Для работы используется консольный svn-клиент + popen, а не соотв. питоновская библиотека, поскольку она а) все равно требует установки клиента б) слишком сложна в установке (у меня не получилось)
Вся работа с svn-клиентом собрана в одну маленькую функцию, так что при необходимости это легко перенастраивается.

Пока ко всему этому тестов нет.

Все вспомогательные файлы (имя задачи в репозитории, путь в репозитории) хранятся
в папке .please