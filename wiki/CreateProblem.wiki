===Создание задачи===
==Linux==
=Создание=
Переместимся в директорию, в которой хотим создать задачу. Теперь создадим пустой макет для нашей задачи.
{{{
~$ please create problem <problem_name>
Untitle(INFO) [01:40:23]: Problem <problem_name> created successfully
}}}
Зайдём в папку с задачей и посмотрим, что внутри.
{{{
~$ cd <problem_name>
~<problem_name>$ ll
drwxr-xr-x  6 dubov94 dubov94  4096 2011-09-22 01:40 ./
drwxr-xr-x 61 dubov94 dubov94  4096 2011-09-22 01:40 ../
-rw-r--r--  1 dubov94 dubov94   133 2011-09-22 01:40 checker.cpp
-rw-r--r--  1 dubov94 dubov94   552 2011-09-22 01:40 default.package
drwxr-xr-x  2 dubov94 dubov94  4096 2011-09-22 01:40 .please/
drwxr-xr-x  2 dubov94 dubov94  4096 2011-09-22 01:40 solutions/
drwxr-xr-x  2 dubov94 dubov94  4096 2011-09-22 01:40 statements/
-rw-r--r--  1 dubov94 dubov94 56775 2011-09-22 01:40 testlib.h
-rw-r--r--  1 dubov94 dubov94 12076 2011-09-22 01:40 testlib.pas
drwxr-xr-x  2 dubov94 dubov94  4096 2011-09-22 01:40 tests/
-rw-r--r--  1 dubov94 dubov94     0 2011-09-22 01:40 tests.please
-rw-r--r--  1 dubov94 dubov94   107 2011-09-22 01:40 validator.cpp
}}}
tests - папка с ручными тестами
solutions - папка со всеми решениями, лежит заготовка на cpp
statements - папка со всеми условиями, лежат две заготовки, для описания (description.ru.tex) и непосредственно условий (default.ru.tex). В перспективе развития please - много условий на разных языках, но пока нет, поэтому не обращаем внимания на `*`.ru
<br><br>
checker.cpp, validator.cpp - заготовки понятно чего
.please - папка со времянками + в ней есть файл time.config, в котором уникальная метка времени создания задачи
<br><br>
testlib.h, testlib.pas - джентельменский набор (писать генераторы, чекеры и валидаторы)
<br><br>
default.package - см. конфигурирование параметров
tests.please - см. конфигурирование тестов
<br><br>
Теперь что со всем этим можно делать, когда все конфиги прописаны.
=Жизнь после конфигурирования=
Прежде всего нужно понять, что без предварительно сгенерированных тестов ничего проверяться не будет. Генерируются они следующей командой:
{{{
~/<problem name>$ please generate tests
cubes(INFO) [02:02:30]: Generating 21 tests
cubes(INFO) [02:02:30]: Test #1 generated
cubes(INFO) [02:02:30]: Test #2 generated
cubes(INFO) [02:02:30]: Test #3 generated
cubes(INFO) [02:02:30]: Test #4 generated
cubes(INFO) [02:02:30]: Compiling: path:generator_random.cpp
cubes(INFO) [02:02:31]: Test #5 generated
cubes(INFO) [02:02:31]: Test #6 generated
cubes(INFO) [02:02:31]: Test #7 generated
cubes(INFO) [02:02:31]: Test #8 generated
cubes(INFO) [02:02:31]: Test #9 generated
cubes(INFO) [02:02:32]: Test #10 generated
cubes(INFO) [02:02:32]: Test #11 generated
cubes(INFO) [02:02:32]: Test #12 generated
cubes(INFO) [02:02:32]: Test #13 generated
cubes(INFO) [02:02:32]: Test #14 generated
cubes(INFO) [02:02:32]: Test #15 generated
cubes(INFO) [02:02:33]: Test #16 generated
cubes(INFO) [02:02:33]: Test #17 generated
cubes(INFO) [02:02:33]: Test #18 generated
cubes(INFO) [02:02:33]: Test #19 generated
cubes(INFO) [02:02:33]: Compiling: path:generator_max.cpp
cubes(INFO) [02:02:34]: Test #20 generated
cubes(INFO) [02:02:34]: Test #21 generated
cubes(INFO) [02:02:34]: Start validator on test: .tests/1
cubes(INFO) [02:02:34]: Compiling: path:validator.cpp
cubes(INFO) [02:02:36]: Validating .tests/1 by validator.cpp
cubes(INFO) [02:02:36]: Start validator on test: .tests/2
cubes(INFO) [02:02:36]: Validating .tests/2 by validator.cpp
cubes(INFO) [02:02:36]: Start validator on test: .tests/3
cubes(INFO) [02:02:36]: Validating .tests/3 by validator.cpp
cubes(INFO) [02:02:36]: Start validator on test: .tests/4
cubes(INFO) [02:02:36]: Validating .tests/4 by validator.cpp
cubes(INFO) [02:02:36]: Start validator on test: .tests/5
cubes(INFO) [02:02:36]: Validating .tests/5 by validator.cpp
cubes(INFO) [02:02:36]: Start validator on test: .tests/6
cubes(INFO) [02:02:36]: Validating .tests/6 by validator.cpp
cubes(INFO) [02:02:36]: Start validator on test: .tests/7
cubes(INFO) [02:02:36]: Validating .tests/7 by validator.cpp
cubes(INFO) [02:02:37]: Start validator on test: .tests/8
cubes(INFO) [02:02:37]: Validating .tests/8 by validator.cpp
cubes(INFO) [02:02:37]: Start validator on test: .tests/9
cubes(INFO) [02:02:37]: Validating .tests/9 by validator.cpp
cubes(INFO) [02:02:37]: Start validator on test: .tests/10
cubes(INFO) [02:02:37]: Validating .tests/10 by validator.cpp
cubes(INFO) [02:02:37]: Start validator on test: .tests/11
cubes(INFO) [02:02:37]: Validating .tests/11 by validator.cpp
cubes(INFO) [02:02:37]: Start validator on test: .tests/12
cubes(INFO) [02:02:37]: Validating .tests/12 by validator.cpp
cubes(INFO) [02:02:37]: Start validator on test: .tests/13
cubes(INFO) [02:02:37]: Validating .tests/13 by validator.cpp
cubes(INFO) [02:02:37]: Start validator on test: .tests/14
cubes(INFO) [02:02:37]: Validating .tests/14 by validator.cpp
cubes(INFO) [02:02:37]: Start validator on test: .tests/15
cubes(INFO) [02:02:37]: Validating .tests/15 by validator.cpp
cubes(INFO) [02:02:37]: Start validator on test: .tests/16
cubes(INFO) [02:02:37]: Validating .tests/16 by validator.cpp
cubes(INFO) [02:02:37]: Start validator on test: .tests/17
cubes(INFO) [02:02:37]: Validating .tests/17 by validator.cpp
cubes(INFO) [02:02:37]: Start validator on test: .tests/18
cubes(INFO) [02:02:37]: Validating .tests/18 by validator.cpp
cubes(INFO) [02:02:38]: Start validator on test: .tests/19
cubes(INFO) [02:02:38]: Validating .tests/19 by validator.cpp
cubes(INFO) [02:02:38]: Start validator on test: .tests/20
cubes(INFO) [02:02:38]: Validating .tests/20 by validator.cpp
cubes(INFO) [02:02:38]: Start validator on test: .tests/21
cubes(INFO) [02:02:38]: Validating .tests/21 by validator.cpp
cubes(INFO) [02:02:38]: Generating answer for .tests/1 with solutions/solution.py
cubes(INFO) [02:02:38]: Generating answer for .tests/2 with solutions/solution.py
cubes(INFO) [02:02:38]: Generating answer for .tests/3 with solutions/solution.py
cubes(INFO) [02:02:38]: Generating answer for .tests/4 with solutions/solution.py
cubes(INFO) [02:02:39]: Generating answer for .tests/5 with solutions/solution.py
cubes(INFO) [02:02:39]: Generating answer for .tests/6 with solutions/solution.py
cubes(INFO) [02:02:40]: Generating answer for .tests/7 with solutions/solution.py
cubes(INFO) [02:02:40]: Generating answer for .tests/8 with solutions/solution.py
cubes(INFO) [02:02:41]: Generating answer for .tests/9 with solutions/solution.py
cubes(INFO) [02:02:42]: Generating answer for .tests/10 with solutions/solution.py
cubes(INFO) [02:02:43]: Generating answer for .tests/11 with solutions/solution.py
cubes(INFO) [02:02:43]: Generating answer for .tests/12 with solutions/solution.py
cubes(INFO) [02:02:44]: Generating answer for .tests/13 with solutions/solution.py
cubes(INFO) [02:02:45]: Generating answer for .tests/14 with solutions/solution.py
cubes(INFO) [02:02:45]: Generating answer for .tests/15 with solutions/solution.py
cubes(INFO) [02:02:46]: Generating answer for .tests/16 with solutions/solution.py
cubes(INFO) [02:02:47]: Generating answer for .tests/17 with solutions/solution.py
cubes(INFO) [02:02:47]: Generating answer for .tests/18 with solutions/solution.py
cubes(INFO) [02:02:48]: Generating answer for .tests/19 with solutions/solution.py
cubes(INFO) [02:02:49]: Generating answer for .tests/20 with solutions/solution.py
cubes(INFO) [02:02:50]: Generating answer for .tests/21 with solutions/solution.py
}}}
Заметим, что они заодно провалидировались и ответы к ним (по main solution) составились.
Ещё можно задать теги (please generate tests with tag[s] ...), тогда будут браться тесты только с заданными тегами. Смотрите please help.
<br><br>
Теперь у нас есть некий набор тестов, который хранится в .tests. Да-да, у нас появилась новая папка. Так вот, представим, что мы заметили ошибку в валидаторе, и хотим заново провалидировать уже готовые тесты. Тогда сделаем так:
{{{
~/<problem_name>$ please validate tests
cubes(INFO) [02:11:42]: Start validator on test: .tests/1
cubes(INFO) [02:11:42]: Validating .tests/1 by validator.cpp
cubes(INFO) [02:11:42]: Start validator on test: .tests/2
cubes(INFO) [02:11:42]: Validating .tests/2 by validator.cpp
cubes(INFO) [02:11:42]: Start validator on test: .tests/3
cubes(INFO) [02:11:42]: Validating .tests/3 by validator.cpp
cubes(INFO) [02:11:42]: Start validator on test: .tests/4
cubes(INFO) [02:11:42]: Validating .tests/4 by validator.cpp
cubes(INFO) [02:11:42]: Start validator on test: .tests/5
cubes(INFO) [02:11:42]: Validating .tests/5 by validator.cpp
cubes(INFO) [02:11:42]: Start validator on test: .tests/6
cubes(INFO) [02:11:42]: Validating .tests/6 by validator.cpp
cubes(INFO) [02:11:42]: Start validator on test: .tests/7
cubes(INFO) [02:11:42]: Validating .tests/7 by validator.cpp
cubes(INFO) [02:11:42]: Start validator on test: .tests/8
cubes(INFO) [02:11:42]: Validating .tests/8 by validator.cpp
cubes(INFO) [02:11:42]: Start validator on test: .tests/9
cubes(INFO) [02:11:42]: Validating .tests/9 by validator.cpp
cubes(INFO) [02:11:42]: Start validator on test: .tests/10
cubes(INFO) [02:11:42]: Validating .tests/10 by validator.cpp
cubes(INFO) [02:11:42]: Start validator on test: .tests/11
cubes(INFO) [02:11:42]: Validating .tests/11 by validator.cpp
cubes(INFO) [02:11:43]: Start validator on test: .tests/12
cubes(INFO) [02:11:43]: Validating .tests/12 by validator.cpp
cubes(INFO) [02:11:43]: Start validator on test: .tests/13
cubes(INFO) [02:11:43]: Validating .tests/13 by validator.cpp
cubes(INFO) [02:11:43]: Start validator on test: .tests/14
cubes(INFO) [02:11:43]: Validating .tests/14 by validator.cpp
cubes(INFO) [02:11:43]: Start validator on test: .tests/15
cubes(INFO) [02:11:43]: Validating .tests/15 by validator.cpp
cubes(INFO) [02:11:43]: Start validator on test: .tests/16
cubes(INFO) [02:11:43]: Validating .tests/16 by validator.cpp
cubes(INFO) [02:11:43]: Start validator on test: .tests/17
cubes(INFO) [02:11:43]: Validating .tests/17 by validator.cpp
cubes(INFO) [02:11:43]: Start validator on test: .tests/18
cubes(INFO) [02:11:43]: Validating .tests/18 by validator.cpp
cubes(INFO) [02:11:43]: Start validator on test: .tests/19
cubes(INFO) [02:11:43]: Validating .tests/19 by validator.cpp
cubes(INFO) [02:11:43]: Start validator on test: .tests/20
cubes(INFO) [02:11:43]: Validating .tests/20 by validator.cpp
cubes(INFO) [02:11:43]: Start validator on test: .tests/21
cubes(INFO) [02:11:43]: Validating .tests/21 by validator.cpp
}}}
Если что-то пойдёт не так, в одной из строк нас ждёт сюрприз:
{{{
cubes(ERROR) [02:13:16]: Validator executions has had RE
cubes(ERROR) [02:13:16]: 
STDERR:
}}}
Также можно перегенерировать ответы, please generate answers.